services:
  payments_postgres:
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - payments_postgres_data:/var/lib/postgresql/data
    networks:
      - backend
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - backend
    
  
  payments_api:
    build:
      context: ./PaymentsServer
      dockerfile: PaymentsServer.Presentation/Dockerfile
    image: payments_service_api:latest
    restart: always
    depends_on:
      - payments_postgres
      - kafka
    env_file:
      - ./.env
    environment:
      - ConnectionStrings__Postgres=${ConnectionStrings__Postgres}
      - Kafka__BootstrapServers=kafka:9092

    ports:
      - "6000:5002"
    networks:
      - backend
    

networks:
  backend:
    driver: bridge
    
volumes:
  payments_postgres_data:
  kafka_data:
  
  