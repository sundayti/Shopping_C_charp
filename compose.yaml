services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_DOCKER://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_DOCKER://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_DOCKER

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    networks:
      - backend
  payments_postgres:
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_PAYMENTS_DB}
    volumes:
      - payments_postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "9000:5432"
    networks:
      - backend

  orders_postgres:
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_ORDERS_DB}
    command: ["postgres", "-c", "port=2345"]
    volumes:
      - orders_postgres_data:/var/lib/postgresql/data
    expose:
      - "2345"
    ports:
      - "9001:2345"
    networks:
      - backend

  payments_api:
    build:
      context: ./PaymentsServer
      dockerfile: PaymentsServer.Presentation/Dockerfile
    image: payments_service_api:latest
    restart: always
    depends_on:
      - payments_postgres
      - kafka
    env_file:
      - .env
    environment:
      - ConnectionStrings__Postgres=${ConnectionStrings_Payments_Postgres}
      - Kafka__BootstrapServers=kafka:29092
      - Kafka__GroupId=payments-group
    ports:
      - "6000:5002"
    networks:
      - backend

  orders_api:
    build:
      context: ./OrdersService
      dockerfile: OrdersService.Presentation/Dockerfile
    image: orders_service_api:latest
    restart: always
    depends_on:
      - orders_postgres
      - kafka
    env_file:
      - .env
    environment:
      - ConnectionStrings__Postgres=${ConnectionStrings_Orders_Postgres}
      - Kafka__BootstrapServers=kafka:29092
      - Kafka__GroupId=orders-group
    ports:
      - "6001:5001"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  payments_postgres_data:
  orders_postgres_data: