services:
  payments_postgres:
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_PAYMENTS_DB}
    volumes:
      - payments_postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - backend
        
  orders_postgres:
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_ORDERS_DB}
    command: ["postgres", "-c", "port=2345"]
    volumes:
      - orders_postgres_data:/var/lib/postgresql/data
    expose:
      - "2345"
    networks:
      - backend
  
  payments_api:
    build:
      context: ./PaymentsServer
      dockerfile: PaymentsServer.Presentation/Dockerfile
    image: payments_service_api:latest
    restart: always
    depends_on:
      - payments_postgres
    env_file:
      - .env
    environment:
      - ConnectionStrings__Postgres=${ConnectionStrings_Payments_Postgres}

    ports:
      - "6000:5002"
    networks:
      - backend
  
  orders_api:
    build:
      context: ./OrdersService
      dockerfile: OrdersService.Presentation/Dockerfile
    image: orders_service_api:latest
    restart: always
    depends_on:
      - orders_postgres
    env_file:
      - .env
    environment:
      - ConnectionStrings__Postgres=${ConnectionStrings_Orders_Postgres}
    ports:
      - "6001:5001"
    networks:
      - backend

networks:
  backend:
    driver: bridge
    
volumes:
  payments_postgres_data:
  orders_postgres_data:
  
  